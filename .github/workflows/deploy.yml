name: Deploy Providence Anniversary Site

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install build tools
      run: |
        npm install -g uglify-js
        npm install -g clean-css-cli
        
    - name: Create build directory
      run: |
        mkdir -p build
        
    - name: Copy files to build
      run: |
        cp index.html build/
        cp manifest.json build/
        cp sw.js build/
        cp -r assets/ build/
        cp -r menus/ build/ 2>/dev/null || true
        
    - name: Minify JavaScript
      run: |
        if [ -f assets/js/providence-app.js ]; then
          uglifyjs assets/js/providence-app.js -c -m -o build/assets/js/providence-app.min.js
          sed -i 's/assets\/js\/providence-app.js/assets\/js\/providence-app.min.js/g' build/index.html
        fi
        
    - name: Create Netlify deployment package
      run: |
        mkdir -p netlify-deploy
        cp -r build/* netlify-deploy/
        
        # Create _redirects file
        cat > netlify-deploy/_redirects << 'EOF'
        # Redirect rules for Providence Anniversary site
        /api/* http://192.168.68.69:8080/api/:splat 200
        /* /index.html 200
        EOF
        
    - name: Deploy to Netlify
      uses: netlify/actions/cli@master
      with:
        args: deploy --prod --dir=netlify-deploy
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        
    - name: Create deployment artifact
      run: |
        cd netlify-deploy
        tar -czf ../providence-site.tar.gz .
        
    - name: Upload deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: providence-site
        path: providence-site.tar.gz
        
    - name: Deployment Summary
      run: |
        echo "🎉 Build completed successfully!"
        echo "📦 Deployment package created"
        if [ -n "${{ secrets.NETLIFY_AUTH_TOKEN }}" ]; then
          echo "🌐 Deployed to Netlify automatically"
        else
          echo "� Manual Netlify deployment required - download artifact"
        fi
